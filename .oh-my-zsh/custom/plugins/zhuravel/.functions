# Open a man page in Preview
function pman() {
  man -t $1 | open -f -a /Applications/Preview.app
}

# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$@"
}

# Change working directory to the top-most Finder window location
function cdf() { # short for `cdfinder`
  cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')"
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh
  else
    local arg=-sh
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@"
  else
    du $arg .[^.]* *
  fi
}

# Create a git.io short URL
function gitio() {
  if [ -z "${1}" -o -z "${2}" ]; then
    echo "Usage: \`gitio slug url\`"
    return 1
  fi
  curl -i http://git.io/ -F "url=${2}" -F "code=${1}"
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local port="${1:-8000}"
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Syntax-highlight JSON strings or files
# Usage: `json '{"foo":42}'` or `echo '{"foo":42}' | json`
function json() {
  if [ -t 0 ]; then # argument
    python -mjson.tool <<< "$*" | pygmentize -l javascript
  else # pipe
    python -mjson.tool | pygmentize -l javascript
  fi
}

# All the dig info
function digga() {
  dig +nocmd "$1" any +multiline +noall +answer
}

# Who is listening on a given TCP port?
function onport() {
  if [ $# -eq 2 ]; then
    lsof -i TCP:$1 -t
  elif [ ! -z $1 ]; then
    lsof -i TCP:$1 | grep LISTEN
  else
    echo 'Usage: onport $PORT [--pid]'
  fi
}

# Helps me figure out what I can delete to free some space on SSD
function find_large_files() {
  if [ ! -z $1 ]; then
    sudo find $1 -type f -size +${2:-100M} -exec du -h {} \; 2> /dev/null
  else
    echo 'Usage: find_large_files /path 100M'
  fi
}

# Quit an OS X application
function quit() {
  for app in $*; do
    osascript -e 'quit app "'$app'"'
  done
}

# Relaunch an OS X application
function relaunch() {
  for app in $*; do
    osascript -e 'quit app "'$app'"';
    sleep 2;
    open -a $app
  done
}

# Uninstall an app with AppZapper
function zap() {
  open -a AppZapper /Applications/$1.app
}

# This seemed to be the most effective way to get someone to stop using my laptop
function overheat() {
  echo 'The system is overheating and needs to go to sleep now.' | \
  growlnotify -a 'Activity Monitor' 'OVERHEATED'; \
  sleep 1; \
  say 'Overheated system.'
}
